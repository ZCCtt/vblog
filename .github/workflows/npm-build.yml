name: VBlog CI/CD

on:
  push:
    branches: [ master ]
  workflow_dispatch: # 启用手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15 # 设置超时防止永久挂起
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        echo "开始安装依赖..."
        npm ci --no-progress --loglevel=error
        echo "依赖安装完成"
    
    - name: Build project
      run: |
        echo "开始构建项目..."
        npm run build --silent
        echo "构建完成"
      env:
        VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL || 'https://api.example.com' }}
      timeout-minutes: 10 # 设置构建超时
    
    - name: Verify build output
      run: |
        echo "检查构建结果..."
        if [ ! -d "dist" ]; then
          echo "错误：dist 目录不存在"
          exit 1
        fi
        
        if [ ! -f "dist/index.html" ]; then
          echo "错误：index.html 未生成"
          exit 1
        fi
        
        echo "构建验证通过"
        ls -lh dist/
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      if: ${{ github.ref == 'refs/heads/main' }}
    
    # 添加详细的构建日志输出
    - name: Print build logs
      if: always() # 无论成功失败都运行
      run: |
        echo "===== 最后20行构建日志 ====="
        tail -n 20 build.log || echo "无构建日志"
    
    # 添加缓存优化
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          .npm
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    # 添加资源监控
    - name: Monitor resources
      uses: nick-fields/action-resource-monitor@v1
      with:
        run-interval: 5 # 每5秒监控一次