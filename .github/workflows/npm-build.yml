name: VBlog CI/CD

on:
  push:
    branches: [ master ]
  workflow_dispatch: # 启用手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
      env:
        VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL || 'https://api.example.com' }}
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      if: ${{ github.ref == 'refs/heads/main' }}
    
    # 手动触发时创建 Release
    - name: Create Release (Manual Trigger)
      if: ${{ github.event_name == 'workflow_dispatch' }}
      id: create_release
      uses: actions/create-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.run_id }}
        release_name: "Build ${{ github.run_number }}"
        body: |
          **VBlog 手动构建发布**
          - 提交: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          - 部署预览: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
          - 构建时间: ${{ steps.get-time.outputs.timestamp }}
        draft: false
        prerelease: true
    
    - name: Zip artifacts (Manual Trigger)
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        cd dist
        zip -r ../vblog-build-${{ github.run_number }}.zip .
    
    - name: Upload Release Asset (Manual Trigger)
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-release-asset@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./vblog-build-${{ github.run_number }}.zip
        asset_name: vblog-build-${{ github.run_number }}.zip
        asset_content_type: application/zip
    
    - name: Get current time
      id: get-time
      run: echo "timestamp=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT
    
    # 添加 Lighthouse 性能测试
    - name: Run Lighthouse audit
      uses: treosh/lighthouse-ci-action@v11
      with:
        urls: |
          https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
        uploadArtifacts: true
        temporaryPublicStorage: true
        configPath: ./.github/lighthouserc.json # 可选的配置文件