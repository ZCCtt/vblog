name: Build and Deploy to External Repo

on:
  workflow_dispatch: # 手动触发
  push:
    branches: [main] # 主分支推送时触发
  release:
    types: [created] # 创建 Release 时触发

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout source repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '14'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install --legacy-peer-deps --no-audit --no-optional
        
    - name: Build production bundle
      run: npm run build
      
    - name: Package build artifacts
      run: |
        cd dist
        zip -r ../dist-artifact.zip .
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist-artifact
        path: dist-artifact.zip
        retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy to Target Repository
    
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: dist-artifact
        path: dist-content
        
    - name: Extract build artifacts
      run: |
        unzip dist-content/dist-artifact.zip -d dist-unpacked
        echo "构建内容:"
        ls -l dist-unpacked
        
    # 配置目标仓库
    - name: Checkout target repository
      uses: actions/checkout@v4
      with:
        repository: ZCCtt/ZCCtt.github.io # 替换为目标仓库
        token: ${{ secrets.TARGET_REPO_TOKEN }} # 目标仓库的访问令牌
        path: target-repo
        ref: main # 目标分支
        
    - name: Clean target repository
      run: |
        cd target-repo
        # 删除除 .git 外的所有文件
        if [ -d .git ]; then
          find . -mindepth 1 -not -path './.git*' -delete
        else
          echo "错误: .git 目录不存在"
          exit 1
        fi
        
    - name: Copy build artifacts
      run: |
        # 复制构建产物到目标仓库
        cp -a dist-unpacked/. target-repo/
        echo "复制后目标仓库内容:"
        ls -la target-repo
        
    - name: Configure Git
      run: |
        cd target-repo
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
    - name: Commit and push to target repository
      run: |
        cd target-repo
        git add --all
        git status
        git commit -m "Deploy from ${{ github.repository }}@${{ github.sha }}"
        git push origin main
        
    - name: Create deployment report
      run: |
        echo "部署报告" > report.txt
        echo "源仓库: ${{ github.repository }}" >> report.txt
        echo "源提交: ${{ github.sha }}" >> report.txt
        echo "目标仓库: username/target-repo" >> report.txt
        echo "目标分支: main" >> report.txt
        echo "部署时间: $(date)" >> report.txt
        
    - name: Upload deployment report
      uses: actions/upload-artifact@v4
      with:
        name: deployment-report
        path: report.txt
        retention-days: 7