name: Build and Release on Master Push

on:
  push:
    branches:
      - master  # 仅 master 分支推送时触发

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许创建 Release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整提交历史
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build project
      run: npm run build
    
    - name: Get version from package.json
      id: package-version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Using version: $VERSION"
    
    - name: Zip artifacts
      run: |
        cd dist
        zip -r ../build-${{ github.run_number }}.zip .
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package-version.outputs.version }}-${{ github.run_number }}
        release_name: Release v${{ steps.package-version.outputs.version }} (Build #${{ github.run_number }})
        body: |
          **自动构建发布**
          - 触发提交: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          - 提交者: @${{ github.actor }}
          - 工作流运行: [#${{ github.run_number }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - 构建时间: ${{ steps.get-time.outputs.timestamp }}
        draft: false
        prerelease: false
    
    - name: Get current time
      id: get-time
      run: echo "timestamp=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build-${{ github.run_number }}.zip
        asset_name: build-v${{ steps.package-version.outputs.version }}.zip
        asset_content_type: application/zip
    
    - name: Cleanup
      run: rm build-${{ github.run_number }}.zip